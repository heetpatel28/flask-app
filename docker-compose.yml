version: '3.8'

services:
  # --- Your Original Application ---
  flask:
    build: .
    container_name: flask_app
    ports:
      - "5050:5050"
    networks:
      - two-tier-network
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=mysecretpassword
      - MYSQL_DATABASE=visit_counter
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      - MYSQL_ROOT_PASSWORD=mysecretpassword
      - MYSQL_DATABASE=visit_counter
    networks:
      - two-tier-network
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pmysecretpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # --- NEW MONITORING SERVICES ---
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090" # Prometheus dashboard
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Mount our new config file
    networks:
      - two-tier-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000" # Grafana dashboard
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - two-tier-network
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - two-tier-network
    restart: unless-stopped
    # This is needed for Node Exporter to see host metrics
    pid: "host"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080" # cAdvisor dashboard
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - two-tier-network
    restart: unless-stopped
    # This is needed for cAdvisor to see Docker metrics
    privileged: true
    devices:
      - /dev/kmsg

networks:
  two-tier-network:
    driver: bridge

volumes:
  mysql-data:
  grafana-data: # New volume for Grafana